'use strict';
var fs = require('fs');
var moment = require('moment');
var ical = require('ical-generator');
var padStart = require('lodash/padStart');
var Converter = require('./LunarSolarConverter.js');
var Lunar = Converter.Lunar;
var converter = Converter.converter;
var Solar = Converter.Solar

function formatSolarDate(solar) {
    var year = solar.solarYear,
        month = padStart(solar.solarMonth, 2, '0'),
        day = padStart(solar.solarDay, 2, '0');
    return (`${year}-${month}-${day}`);
}

function generateCalendar(argsArray) {
    var cal = ical({
        name: "summary"
    });

    //console.log(argsArray);

    for (var argIndex = 0; argIndex < argsArray.length; argIndex++) {
        var args = argsArray[argIndex];
        var currentYear = +new Date().getFullYear();
        var lunarBirthday = new Lunar(args.lunar_year, +args.lunar_month, +args.lunar_day, args['leep']);
        var calculateYearsCount = +args.count;
        var name = args.name;
        var summary = `${name}`;
        var uid = args.uid;
        var color = args.color;
        var timestamp = Date();
        console.log(lunarBirthday);
        for (var i = 0; i < calculateYearsCount; i++) {
            lunarBirthday.lunarYear = lunarBirthday.lunarYear + i;
            var solarBirthday = converter.LunarToSolar(lunarBirthday);
            //console.log (solarBirthday)
            // console.log (lunarBirthday)
            var solarStartDate = moment(formatSolarDate(solarBirthday)).hours(8).minutes(0).seconds(0).toDate();
            var solarEndDate = moment(formatSolarDate(solarBirthday)).hours(8).minutes(10).seconds(1).toDate();
            // console.log (solarStartDate)
            // console.log (solarEndDate)
            cal.createEvent({
                uid: uid,
                start: solarStartDate,
                //allDay: true,
                end: solarEndDate,
                timestamp: timestamp,
                //color: color,
                summary: `${name}`,
                location: color
            });
        }
    }
    return cal;
}

function generateCalendarWithSolar(argsArray) {
    var cal = ical({
        name: "summary"
    });

    //console.log(argsArray);

    for (var argIndex = 0; argIndex < argsArray.length; argIndex++) {
        var args = argsArray[argIndex];

        var solarBirthday = new Solar(args.solar_year , +args.solar_month, +args.solar_day);
        var calculateYearsCount = +args.count;
        var name = args.name;
        var summary = `${name}`;
        var uid = args.uid;
        var color = args.color;
        var timestamp = Date();
        console.log(solarBirthday);
        for (var i = 0; i < calculateYearsCount; i++) {
            var solarStartDate = moment(formatSolarDate(solarBirthday)).hours(8).minutes(0).seconds(0).toDate();
            var solarEndDate = moment(formatSolarDate(solarBirthday)).hours(8).minutes(10).seconds(1).toDate();
            // console.log (solarStartDate)
            // console.log (solarEndDate)
            cal.createEvent({
                uid: uid,
                start: solarStartDate,
                //allDay: true,
                end: solarEndDate,
                timestamp: timestamp,
                //color: color,
                summary: `${name}`,
                location: color
            });
        }
    }
    return cal;
}


module.exports = {
    generateCalendar,generateCalendarWithSolar
};